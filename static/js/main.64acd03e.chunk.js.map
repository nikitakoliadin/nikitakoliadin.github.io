{"version":3,"sources":["components/App/App.module.css","serviceWorker.js","localization/localization.js","components/LinearX/LinearX.js","components/Body/Body.js","components/App/App.js","index.js","components/Body/Body.module.css","components/LinearX/LinearX.module.css"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","localization","LocalizedStrings","en","greeting","uk","ru","LinearX","props","letters","centralize","size","innerWidth","splitLetters","split","className","styles","Letters","map","splitLetter","index","x1","length","Math","floor","x2","x","key","Letter","Body","Greeting","App","useEffect","scrollTo","top","behavior","process","JSON","parse","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","message","ParallaxCache","parallaxController","useController","useLayoutEffect","handler","update","removeEventListener","component","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64acd03e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\"};","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                checkValidServiceWorker(swUrl, config);\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            console.log('Content is cached for offline use.');\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'},\r\n    })\r\n        .then(response => {\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import LocalizedStrings from 'react-localization';\r\n\r\nlet localization = new LocalizedStrings({\r\n    en: {\r\n        greeting: 'HELLO',\r\n    },\r\n    uk: {\r\n        greeting: 'ПРИВІТ',\r\n    },\r\n    ru: {\r\n        greeting: 'ПРИВЕТ',\r\n    }\r\n});\r\n\r\nexport default localization;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './LinearX.module.css';\nimport {Parallax} from 'react-scroll-parallax';\n\nfunction LinearX(props) {\n    const {letters, centralize = false, size = window.innerWidth / 2} = props;\n    const splitLetters = letters.split('');\n    return (\n        <div className={styles.Letters}>\n            {\n                splitLetters.map((splitLetter, index) => {\n                    let x1 = (centralize ? -size : 0) * (splitLetters.length % 2 === 0\n                        ? ((index >= splitLetters.length / 2 ? index + 1 : index) - (splitLetters.length / 2))\n                        : (index - Math.floor(letters.length / 2)));\n                    let x2 = size * (splitLetters.length % 2 === 0\n                        ? ((index >= splitLetters.length / 2 ? index + 1 : index) - (splitLetters.length / 2))\n                        : (index - Math.floor(letters.length / 2)));\n                    x1 = x1 > 0\n                        ? x1 - (splitLetters.length % 2 === 0 ? size / 2 : 0)\n                        : x1 + (splitLetters.length % 2 === 0 ? size / 2 : 0);\n                    x2 = x2 > 0\n                        ? x2 - (splitLetters.length % 2 === 0 ? size / 2 : 0)\n                        : x2 + (splitLetters.length % 2 === 0 ? size / 2 : 0);\n                    const x = [\n                        x1,\n                        x2\n                    ];\n                    return (\n                        <Parallax key={`letter-${index}`}\n                                  x={x}\n                                  className={styles.Letter}>\n                            {splitLetter}\n                        </Parallax>\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nLinearX.propTypes = {\n    letters: PropTypes.string.isRequired,\n    centralize: PropTypes.bool,\n    size: PropTypes.number,\n}\n\nexport default LinearX;\n","import React from 'react';\nimport styles from './Body.module.css';\nimport localization from '../../localization/localization';\nimport LinearX from '../LinearX/LinearX';\n\nfunction Body() {\n    return (\n        <div className={styles.Body}>\n            <div className={styles.Greeting}>\n                <LinearX letters={localization.greeting}\n                         centralize={true}\n                         size={window.innerWidth / 2}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Body;\n","import React, {useEffect} from 'react';\r\nimport styles from './App.module.css';\r\nimport Body from '../Body/Body';\r\n\r\nfunction App() {\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className={styles.App}>\r\n            <Body/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React, {useLayoutEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {useController, ParallaxProvider} from 'react-scroll-parallax';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './components/App/App';\r\n\r\nconsole.log(`Version = ${process.env.REACT_APP_VERSION}`);\r\nconsole.log(`Register service worker = ${process.env.REACT_APP_REGISTER_SERVICE_WORKER}`);\r\n\r\nif (JSON.parse(process.env.REACT_APP_REGISTER_SERVICE_WORKER)) {\r\n    serviceWorker.register();\r\n} else {\r\n    serviceWorker.unregister();\r\n}\r\n\r\nconst ParallaxCache = () => {\r\n    const {parallaxController} = useController();\r\n\r\n    useLayoutEffect(() => {\r\n        const handler = () => parallaxController.update();\r\n        window.addEventListener('load', handler);\r\n        return () => window.removeEventListener('load', handler);\r\n    }, [parallaxController]);\r\n\r\n    return null;\r\n};\r\n\r\nconst component = (\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <ParallaxProvider>\r\n                <ParallaxCache/>\r\n                <App/>\r\n            </ParallaxProvider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(component, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"Body_Body__3G-xz\",\"Greeting\":\"Body_Greeting__obtxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Letters\":\"LinearX_Letters__3-ni-\",\"Letter\":\"LinearX_Letter__1vuiN\"};"],"sourceRoot":""}