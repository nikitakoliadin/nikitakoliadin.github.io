{"version":3,"sources":["components/Header/Header.module.css","components/Button/Button.module.css","components/Body/Body.module.css","components/LinearX/LinearX.module.css","components/App/App.module.css","serviceWorker.js","localization/localization.js","components/Button/Button.js","components/Header/Header.js","components/LinearX/LinearX.js","components/Body/Body.js","components/App/App.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","localization","LocalizedStrings","en","greeting","uk","ru","Button","props","reference","type","disabled","children","onClick","ref","className","styles","CircleButton","RectangleButton","Header","languages","activeLanguage","languageButtonType","setLanguage","Languages","map","language","index","key","Language","undefined","toUpperCase","LinearX","letters","centralize","size","innerWidth","splitLetters","split","Letters","splitLetter","x1","length","Math","floor","x2","x","Letter","Body","Greeting","App","useLocation","useState","useEffect","scrollTo","top","behavior","queryParser","parse","search","toString","toLowerCase","defaultLanguage","getAvailableLanguages","getLanguage","defineLanguage","process","JSON","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","message","ParallaxCache","parallaxController","useController","useLayoutEffect","handler","update","removeEventListener","component","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36ca818c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"Languages\":\"Header_Languages__FVNFx\",\"Language\":\"Header_Language__3QF2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RectangleButton\":\"Button_RectangleButton__HujSg\",\"CircleButton\":\"Button_CircleButton__p4NZW\",\"decreaseFocus\":\"Button_decreaseFocus__RbXiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"Body_Body__3G-xz\",\"Greeting\":\"Body_Greeting__obtxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Letters\":\"LinearX_Letters__3-ni-\",\"Letter\":\"LinearX_Letter__1vuiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\"};","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                checkValidServiceWorker(swUrl, config);\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            console.log('Content is cached for offline use.');\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'},\r\n    })\r\n        .then(response => {\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import LocalizedStrings from 'react-localization';\r\n\r\nlet localization = new LocalizedStrings({\r\n    en: {\r\n        greeting: 'HELLO',\r\n    },\r\n    uk: {\r\n        greeting: 'ПРИВІТ',\r\n    },\r\n    ru: {\r\n        greeting: 'ПРИВЕТ',\r\n    }\r\n});\r\n\r\nexport default localization;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nfunction Button(props) {\r\n    const {reference, type = 'rectangle', disabled = false, children} = props;\r\n    const {onClick} = props;\r\n    return (\r\n        <button ref={reference}\r\n                className={type === 'circle'\r\n                    ? styles.CircleButton\r\n                    : styles.RectangleButton}\r\n                disabled={disabled}\r\n                onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    reference: PropTypes.object,\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Header.module.css';\nimport Button from '../Button/Button';\n\nfunction Header(props) {\n    const {languages, activeLanguage = languages[0], languageButtonType = 'rectangle'} = props;\n    const {setLanguage} = props;\n    return (\n        <div className={styles.Header}>\n            <div className={styles.Languages}>\n                {\n                    languages.map((language, index) => {\n                        return (\n                            <div key={`language-${index}`}\n                                 className={styles.Language}>\n                                <Button reference={undefined}\n                                        type={languageButtonType}\n                                        disabled={language === activeLanguage}\n                                        onClick={() => setLanguage(language)}>\n                                    {language.toUpperCase()}\n                                </Button>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    languages: PropTypes.array.isRequired,\n    setLanguage: PropTypes.func.isRequired,\n    activeLanguage: PropTypes.string,\n    languageButtonType: PropTypes.string,\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './LinearX.module.css';\nimport {Parallax} from 'react-scroll-parallax';\n\nfunction LinearX(props) {\n    const {letters, centralize = false, size = window.innerWidth / 2} = props;\n    const splitLetters = letters.split('');\n    return (\n        <div className={styles.Letters}>\n            {\n                splitLetters.map((splitLetter, index) => {\n                    let x1 = (centralize ? -size : 0) * (splitLetters.length % 2 === 0\n                        ? ((index >= splitLetters.length / 2 ? index + 1 : index) - (splitLetters.length / 2))\n                        : (index - Math.floor(letters.length / 2)));\n                    let x2 = size * (splitLetters.length % 2 === 0\n                        ? ((index >= splitLetters.length / 2 ? index + 1 : index) - (splitLetters.length / 2))\n                        : (index - Math.floor(letters.length / 2)));\n                    x1 = x1 > 0\n                        ? x1 - (splitLetters.length % 2 === 0 ? size / 2 : 0)\n                        : x1 + (splitLetters.length % 2 === 0 ? size / 2 : 0);\n                    x2 = x2 > 0\n                        ? x2 - (splitLetters.length % 2 === 0 ? size / 2 : 0)\n                        : x2 + (splitLetters.length % 2 === 0 ? size / 2 : 0);\n                    const x = [\n                        x1,\n                        x2\n                    ];\n                    return (\n                        <Parallax key={`letter-${index}`}\n                                  x={x}\n                                  className={styles.Letter}>\n                            {splitLetter}\n                        </Parallax>\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nLinearX.propTypes = {\n    letters: PropTypes.string.isRequired,\n    centralize: PropTypes.bool,\n    size: PropTypes.number,\n}\n\nexport default LinearX;\n","import React from 'react';\nimport styles from './Body.module.css';\nimport localization from '../../localization/localization';\nimport LinearX from '../LinearX/LinearX';\n\nfunction Body() {\n    return (\n        <div className={styles.Body}>\n            <div className={styles.Greeting}>\n                <LinearX letters={localization.greeting}\n                         centralize={true}\n                         size={window.innerWidth / 2}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Body;\n","import React, {useState, useEffect} from 'react';\r\nimport styles from './App.module.css';\r\nimport localization from '../../localization/localization';\r\nimport {useLocation} from 'react-router-dom';\r\nimport queryParser from 'query-string';\r\nimport Header from '../Header/Header';\r\nimport Body from '../Body/Body';\r\n\r\nfunction App() {\r\n    const location = useLocation();\r\n    const [language, setLanguage] = useState();\r\n\r\n    function updateLanguage(language) {\r\n        localization.setLanguage(language.toLowerCase());\r\n        setLanguage(language);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (language) {\r\n            console.log(`Language = ${language}`);\r\n        } else {\r\n            defineLanguage(location, setLanguage);\r\n        }\r\n    }, [location, language]);\r\n    return (\r\n        <div className={styles.App}>\r\n            <Header languages={localization.getAvailableLanguages()}\r\n                    activeLanguage={language}\r\n                    setLanguage={updateLanguage}\r\n                    languageButtonType={'circle'}/>\r\n            <Body/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction defineLanguage(location, setLanguage) {\r\n    const {language} = queryParser.parse(location.search);\r\n    if (language) {\r\n        localization.setLanguage(language.toString().toLowerCase());\r\n    } else {\r\n        const defaultLanguage = localization.getAvailableLanguages()[0];\r\n        localization.setLanguage(defaultLanguage);\r\n    }\r\n    setLanguage(localization.getLanguage());\r\n}\r\n\r\nexport default App;\r\n","import React, {useLayoutEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {useController, ParallaxProvider} from 'react-scroll-parallax';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './components/App/App';\r\n\r\nconsole.log(`Version = ${process.env.REACT_APP_VERSION}`);\r\nconsole.log(`Register service worker = ${process.env.REACT_APP_REGISTER_SERVICE_WORKER}`);\r\n\r\nif (JSON.parse(process.env.REACT_APP_REGISTER_SERVICE_WORKER)) {\r\n    serviceWorker.register();\r\n} else {\r\n    serviceWorker.unregister();\r\n}\r\n\r\nconst ParallaxCache = () => {\r\n    const {parallaxController} = useController();\r\n\r\n    useLayoutEffect(() => {\r\n        const handler = () => parallaxController.update();\r\n        window.addEventListener('load', handler);\r\n        return () => window.removeEventListener('load', handler);\r\n    }, [parallaxController]);\r\n\r\n    return null;\r\n};\r\n\r\nconst component = (\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <ParallaxProvider>\r\n                <ParallaxCache/>\r\n                <App/>\r\n            </ParallaxProvider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(component, document.getElementById('root'));\r\n"],"sourceRoot":""}